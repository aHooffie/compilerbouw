/* 
 * Andrea van den Hooff
 * 10439080
 * Premaster Software Engineering
 * main.cvc: Test unit for Assignments 1.1, 1.2 and 1.3.
 */

#include <civic.h>
#include "coreio.cvc"
#include "array.cvc"

/* Ask which assignment needs to be ran. */
export int main()
{
    int as = scanInt();

    if (as == 1)
        as_1();
    else if (as == 2)
        as_2();
    else if (as == 3)
        as_3();

    return 0;
}

/* Tests for assignment 1.*/
export int as_1()
{
    /* Test the gcd computation. */
    printInt(gcd(15, 10));
    printNewlines(1);
    printInt(gcd(7877, 3547));
    printNewlines(1);
    printInt(gcd(10, -1));
    printNewlines(1);
    printInt(gcd(1675, 1633125));
    printNewlines(2);

    /* Test the fibonacci computation. */
    printInt(fib(2));
    printNewlines(1);
    printInt(fib(1));
    printNewlines(1);
    printInt(fib(50));
    printNewlines(2);

    /* Test the faculty computation. */
    printInt(fac(10));
    printNewlines(1);
    printInt(fac(20));
    printNewlines(1);
    printInt(fac(3));
    printNewlines(2);

    /* Test the prime number computation. Prints 0 on primes, 1 otherwise. */
    if (isprime(40) == true)
        printInt(0);
    else
        printInt(1);
    printNewlines(1);

    if (isprime(-14) == true)
        printInt(0);
    else
        printInt(1);
    printNewlines(1);

    if (isprime(7919) == true)
        printInt(0);
    else
        printInt(1);
    printNewlines(1);

    return 0;
}

/* Tests for assignment 2. */
export int as_2()
{
    /* Test the fibonacci computation. */
    fibs(20);
    printNewlines(1);

    /* Test the prime number computation. */
    primes(30);
    printNewlines(1);

    /* Test wrong input. */
    primes(-1);
    fibs(-3);

    return 0;
}

/* Tests for assignment 3. */
export int as_3()
{
    int[10] vecInt = [ 1, 2, 3, 4, 5, 6, 8, 8, 12, 10 ];
    float[5] vecFloat = [ 1.2, 4.444444, 3.1415, 1208.1994, 1.23456789 ];
    int[3, 3] test;

    float[2, 2] first;
    float[2, 2] second;
    float[2, 2] result;

    /* Test the printing of vectors. */
    printIntVec(vecInt);
    printFloatVec(vecFloat);

    /* Test the int matrix.  */
    scanIntMat(test);
    printIntMat(test);

    /* Test the float matrix & multiplication. */
    scanFloatMat(first);
    scanFloatMat(second);
    matMul(first, second, result);
    printFloatMat(first);
    printFloatMat(second);
    printFloatMat(result);

    return 0;
}