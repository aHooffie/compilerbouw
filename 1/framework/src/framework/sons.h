
/**
 * @file sons.h
 *
 * Defines the NodesUnion and node structures.
 *
 * THIS FILE HAS BEEN GENERATED USING
 * $Id: sons.h.xsl 14593 2006-01-31 17:09:55Z cg $.
 * DO NOT EDIT THIS FILE AS MIGHT BE CHANGED IN A LATER VERSION.
 *
 * ALL CHANGES MADE TO THIS FILE WILL BE OVERWRITTEN!
 *
 */

#ifndef _SAC_SONS_H_
#define _SAC_SONS_H_

#include "types.h"


/******************************************************************************
 * For each node a structure of its sons is defined, named
 * SONS_<nodename>
 *****************************************************************************/
struct SONS_N_ASSIGN {
	node           *Let;
	node           *Expr;
};
struct SONS_N_BINOP {
	node           *Left;
	node           *Right;
};
struct SONS_N_BOOL {
};
struct SONS_N_CAST {
	node           *Expr;
};
struct SONS_N_DECLARATIONS {
	node           *Declaration;
	node           *Next;
};
struct SONS_N_DOWHILE {
	node           *Stmts;
	node           *While;
};
struct SONS_N_ELSE {
	node           *Stmts;
};
struct SONS_N_ERROR {
	node           *Next;
};
struct SONS_N_EXPRESSIONS {
	node           *Expr;
	node           *Next;
};
struct SONS_N_FLOAT {
};
struct SONS_N_FOR {
	node           *Assign;
	node           *Expr;
	node           *ExprOpt;
	node           *Stmts;
};
struct SONS_N_FUNC {
	node           *FuncBody;
	node           *Parameters;
};
struct SONS_N_FUNCBODY {
	node           *Stmts;
	node           *VarDeclarations;
};
struct SONS_N_FUNCTIONCALLEXPR {
	node           *Expressions;
};
struct SONS_N_FUNCTIONCALLSTMT {
	node           *Expressions;
};
struct SONS_N_GLOBALDEC {
};
struct SONS_N_GLOBALDEF {
	node           *Assign;
};
struct SONS_N_IF {
	node           *Else;
	node           *Expr;
	node           *Stmts;
};
struct SONS_N_MODULE {
	node           *Declarations;
};
struct SONS_N_MONOP {
	node           *Expr;
};
struct SONS_N_NUM {
};
struct SONS_N_PARAMETERS {
	node           *Next;
};
struct SONS_N_RETURN {
	node           *Expr;
};
struct SONS_N_STMTS {
	node           *Stmt;
	node           *Next;
};
struct SONS_N_SYMBOLTABLEENTRY {
};
struct SONS_N_VAR {
};
struct SONS_N_VARLET {
	node           *Next;
	node           *Assign;
};
struct SONS_N_WHILE {
	node           *Expr;
	node           *Stmts;
};
/*****************************************************************************
 * This union handles all different types of sons. Its members are
 * called N_nodename.
 ****************************************************************************/
struct SONUNION {
	struct SONS_N_ASSIGN *N_assign;
	struct SONS_N_BINOP *N_binop;
	struct SONS_N_BOOL *N_bool;
	struct SONS_N_CAST *N_cast;
	struct SONS_N_DECLARATIONS *N_declarations;
	struct SONS_N_DOWHILE *N_dowhile;
	struct SONS_N_ELSE *N_else;
	struct SONS_N_ERROR *N_error;
	struct SONS_N_EXPRESSIONS *N_expressions;
	struct SONS_N_FLOAT *N_float;
	struct SONS_N_FOR *N_for;
	struct SONS_N_FUNC *N_func;
	struct SONS_N_FUNCBODY *N_funcbody;
	struct SONS_N_FUNCTIONCALLEXPR *N_functioncallexpr;
	struct SONS_N_FUNCTIONCALLSTMT *N_functioncallstmt;
	struct SONS_N_GLOBALDEC *N_globaldec;
	struct SONS_N_GLOBALDEF *N_globaldef;
	struct SONS_N_IF *N_if;
	struct SONS_N_MODULE *N_module;
	struct SONS_N_MONOP *N_monop;
	struct SONS_N_NUM *N_num;
	struct SONS_N_PARAMETERS *N_parameters;
	struct SONS_N_RETURN *N_return;
	struct SONS_N_STMTS *N_stmts;
	struct SONS_N_SYMBOLTABLEENTRY *N_symboltableentry;
	struct SONS_N_VAR *N_var;
	struct SONS_N_VARLET *N_varlet;
	struct SONS_N_WHILE *N_while;
};
#endif				/* _SAC_SONS_H_ */
